/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proiectpao;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;


/*
 *
 * @author lupul
 */
public class GameInterface extends javax.swing.JFrame {

    private final int PORT = 9000;
    private final String address = "localhost";
    private Socket session;
    private boolean yourTurn = true;
    private boolean win = false;
    private boolean tie = false;
    private BufferedReader opponentMove;
    private PrintWriter yourMove;
    private String symbol;
    private String opponentSymbol;
    private int input;
    private int move;

    //A asdf;
    /**
     * Creates new form GameInterface
     */
    public GameInterface() {
        initComponents();
        try {
            session = new Socket(address, PORT);
            opponentMove = new BufferedReader(new InputStreamReader(session.getInputStream()));
            yourMove = new PrintWriter(session.getOutputStream(), true);
            String mesaj = opponentMove.readLine();
            if (mesaj.startsWith("X")) {
                symbol = "X";
                opponentSymbol = "0";
            }
            if (mesaj.startsWith("0")) {
                symbol = "0";
                opponentSymbol = "X";
            }
            if (symbol.equals("0")) {
                yourTurn = false;
                waitForOpponent();
            } else {
                setStatus("Your turn!");
            }
        } catch (IOException ex) {
            System.out.println(ex);;
        }
    }

    public void waitForOpponent() {
        setStatus("Opponents turn!");
        try {
            move = Integer.parseInt(opponentMove.readLine());
        } catch (IOException ex) {
            System.out.println(ex);
        }
        System.out.println(opponentSymbol);
        switch (move) {
            case 1:
                setButton(jButton1, 2);
                break;
            case 2:
                setButton(jButton2, 2);
                break;
            case 3:
                setButton(jButton3, 2);
                break;
            case 4:
                setButton(jButton4, 2);
                break;
            case 5:
                setButton(jButton5, 2);
                break;
            case 6:
                setButton(jButton6, 2);
                break;
            case 7:
                setButton(jButton7, 2);
                break;
            case 8:
                setButton(jButton8, 2);
                break;
            case 9:
                setButton(jButton9, 2);
                break;
        }
        try {
            input = Integer.parseInt(opponentMove.readLine());
        } catch (IOException ex) {
            System.out.println(ex);
        }
        if (input == 0) {
            setStatus("Your turn!");
            yourTurn = true;
        } else if (input == 10) {
            setStatus("YOU WIN!");
            yourTurn = false;
        } else if (input == -10) {
            setStatus("YOU LOSE!");
            yourTurn = false;
        }

    }

    public void setStatus(String status) {
        this.status.setText(status);
        this.status.paintImmediately(this.status.getVisibleRect());
    }

    public void setButton(javax.swing.JButton button, int symbol) {
        if (symbol == 1) {
            button.setText(this.symbol);
            button.paintImmediately(button.getVisibleRect());
        } else {
            button.setText(this.opponentSymbol);
            button.paintImmediately(button.getVisibleRect());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        status = new javax.swing.JTextField();
        replayButton = new javax.swing.JButton();
        gridHolder = new javax.swing.JPanel();
        jPanel_1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel_2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel_3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel_4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel_5 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel_6 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jPanel_7 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel_8 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel_9 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("X_O");

        status.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        status.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        status.setText("Status");
        getContentPane().add(status, java.awt.BorderLayout.PAGE_END);

        replayButton.setBackground(new java.awt.Color(154, 107, 80));
        replayButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        replayButton.setForeground(new java.awt.Color(255, 255, 255));
        replayButton.setText("Replay");
        replayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replayButtonActionPerformed(evt);
            }
        });
        getContentPane().add(replayButton, java.awt.BorderLayout.PAGE_START);

        gridHolder.setBackground(new java.awt.Color(255, 255, 255));
        gridHolder.setLayout(new java.awt.GridLayout(3, 3));

        jPanel_1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_1.setLayout(new java.awt.BorderLayout());

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel_1.add(jButton1, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_1);

        jPanel_2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_2.setLayout(new java.awt.BorderLayout());

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel_2.add(jButton2, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_2);

        jPanel_3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_3.setLayout(new java.awt.BorderLayout());

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel_3.add(jButton3, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_3);

        jPanel_4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_4.setLayout(new java.awt.BorderLayout());

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel_4.add(jButton4, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_4);

        jPanel_5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_5.setLayout(new java.awt.BorderLayout());

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel_5.add(jButton5, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_5);

        jPanel_6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_6.setLayout(new java.awt.BorderLayout());

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel_6.add(jButton6, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_6);

        jPanel_7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_7.setLayout(new java.awt.BorderLayout());

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel_7.add(jButton7, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_7);

        jPanel_8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_8.setLayout(new java.awt.BorderLayout());

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel_8.add(jButton8, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_8);

        jPanel_9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(142, 88, 88), 2));
        jPanel_9.setLayout(new java.awt.BorderLayout());

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 100)); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel_9.add(jButton9, java.awt.BorderLayout.CENTER);

        gridHolder.add(jPanel_9);

        getContentPane().add(gridHolder, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (yourTurn && !jButton1.getText().equals("X") && !jButton1.getText().equals("0")) {
            System.out.println(symbol);
            setButton(jButton1,1);
            yourMove.println("1");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (yourTurn && !jButton2.getText().equals("X") && !jButton2.getText().equals("0")) {
            setButton(jButton2,1);
            yourMove.println("2");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (yourTurn && !jButton3.getText().equals("X") && !jButton3.getText().equals("0")) {
            setButton(jButton3,1);
            yourMove.println("3");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (yourTurn && !jButton4.getText().equals("X") && !jButton4.getText().equals("0")) {
            setButton(jButton4,1);
            yourMove.println("4");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (yourTurn && !jButton5.getText().equals("X") && !jButton5.getText().equals("0")) {
            setButton(jButton5,1);
            yourMove.println("5");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (yourTurn && !jButton6.getText().equals("X") && !jButton6.getText().equals("0")) {
            setButton(jButton6,1);
            yourMove.println("6");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (yourTurn && !jButton7.getText().equals("X") && !jButton7.getText().equals("0")) {
            setButton(jButton7,1);
            yourMove.println("7");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (yourTurn && !jButton8.getText().equals("X") && !jButton8.getText().equals("0")) {
            setButton(jButton8,1);
            yourMove.println("8");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (yourTurn && !jButton9.getText().equals("X") && !jButton9.getText().equals("0")) {
            setButton(jButton9,1);
            yourMove.println("9");
            try {
                input = Integer.parseInt(opponentMove.readLine());
            } catch (IOException ex) {
                System.out.println(ex);
            }
            if (input == 0) {
                yourTurn = false;
                waitForOpponent();
            } else if (input == 10) {
                setStatus("YOU WON!");
                yourTurn = false;
            } else if (input == -10) {
                setStatus("YOU LOST!");
                yourTurn = false;
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void replayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replayButtonActionPerformed
        /*Scanner sc = new Scanner(System.in);
        System.out.println("Who are you?");
        symbol = sc.nextLine();
        try {
            session = new Socket(address, PORT);
            opponentMove = new BufferedReader(new InputStreamReader(session.getInputStream()));
            yourMove = new PrintWriter(session.getOutputStream(), true);
            if (!symbol.equals("X")) {
                yourTurn = false;
                status.setText("Opponents Turn!");
                waitForOpponent();
            } else {
                status.setText("Your Turn!");
            }
        } catch (IOException ex) {
            System.out.println(ex);;
        }*/
    }//GEN-LAST:event_replayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            System.out.println(ex);;
        } catch (InstantiationException ex) {
            System.out.println(ex);;
        } catch (IllegalAccessException ex) {
            System.out.println(ex);;
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            System.out.println(ex);;
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameInterface().setVisible(true);

            }
        });
    }

    public void createAndShowGUI() {
        this.setSize(300, 300);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        // add components and stuff
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gridHolder;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel_1;
    private javax.swing.JPanel jPanel_2;
    private javax.swing.JPanel jPanel_3;
    private javax.swing.JPanel jPanel_4;
    private javax.swing.JPanel jPanel_5;
    private javax.swing.JPanel jPanel_6;
    private javax.swing.JPanel jPanel_7;
    private javax.swing.JPanel jPanel_8;
    private javax.swing.JPanel jPanel_9;
    private javax.swing.JButton replayButton;
    private javax.swing.JTextField status;
    // End of variables declaration//GEN-END:variables
}
